// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ERole {
  PIONEER
  USER
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  hash      String
  salt      String
  image     String?
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role ERole @default(USER)

  pioneer        Pioneer?        @relation
  bookedSessions BookedSession[]
}

model Pioneer {
  id                     String   @id @default(uuid())
  title                  String
  experience             Int
  session_duration       Float
  bio                    String
  available              Boolean
  skills                 String[]
  additional_information String[]
  facebook               String?
  instagram              String?
  twitter                String?

  user    User   @relation(fields: [user_id], references: [id])
  user_id String @unique

  availableSessions AvailableSession[]
}

model AvailableSession {
  id         String   @id @default(uuid())
  date       DateTime @db.Timestamptz
  time_zone  String
  available  Boolean
  pioneer    Pioneer  @relation(fields: [pioneer_id], references: [id], onDelete: Cascade)
  pioneer_id String

  bookedSession BookedSession?

  version Int @default(1)

  @@unique([pioneer_id, date])

  @@index([pioneer_id])
  @@index([date])
}

model BookedSession {
  id                   String           @id @default(uuid())
  user                 User             @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id              String
  availableSession     AvailableSession @relation(fields: [available_session_id], references: [id], onDelete: Cascade)
  available_session_id String           @unique
  status               BookingStatus    @default(PENDING)
  bookedAt             DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  cancellationReason   String?

  @@index([user_id])
  @@index([status])
}
